# BÀI 1: TẠO CSDL:
CREATE DATABASE QUANLYBANHANG;
USE QUANLYBANHANG;
# BẢNG CUSTOMERS
CREATE TABLE CUSTOMERS
(
    CUSTOMERS_ID VARCHAR(4) PRIMARY KEY NOT NULL,
    NAME         VARCHAR(100)           NOT NULL,
    EMAIL        VARCHAR(100)           NOT NULL,
    PHONE        VARCHAR(25)            NOT NULL,
    ADDRESS      VARCHAR(255)           NOT NULL
);
# BẢNG ORDERS
CREATE TABLE ORDERS
(
    ORDERS_ID    VARCHAR(4) PRIMARY KEY NOT NULL,
    CUSTOMERS_ID VARCHAR(4)             NOT NULL,
    FOREIGN KEY (CUSTOMERS_ID) REFERENCES CUSTOMERS (CUSTOMERS_ID),
    ORDER_DATE   DATE                   NOT NULL,
    TOTAL_AMOUNT DOUBLE                 NOT NULL
);
# BẢNG PRODUCTS
CREATE TABLE PRODUCTS
(
    PRODUCTS_ID   VARCHAR(4) PRIMARY KEY NOT NULL,
    PRODUCTS_NAME VARCHAR(100)           NOT NULL,
    DESCRIPTION   TEXT,
    PRICE         DOUBLE                 NOT NULL,
    STATUS        BIT                    NOT NULL
)
;
# ORDERS_DETAILS
CREATE TABLE ORDERS_DETAILS
(
    ORDERS_ID   VARCHAR(4) NOT NULL,
    PRODUCTS_ID VARCHAR(4) NOT NULL,
    FOREIGN KEY (ORDERS_ID) REFERENCES ORDERS (ORDERS_ID),
    FOREIGN KEY (PRODUCTS_ID) REFERENCES PRODUCTS (PRODUCTS_ID),
    PRIMARY KEY (ORDERS_ID, PRODUCTS_ID),
    QUANTITY    INT(11)    NOT NULL,
    PRICE       DOUBLE     NOT NULL
);
# BÀI 2: THÊM DỮ LIỆU
# BẢNG CUSTOMERS
INSERT INTO CUSTOMERS (CUSTOMERS_ID, NAME, EMAIL, PHONE, ADDRESS)
VALUES ('C001', 'NGUYỄN TRUNG MẠNH', 'MANHNT@GMAIL.COM', '984756322', 'CẦU GIẤY, HÀ NỘI'),
       ('C002', 'HỒ HẢI NAM', 'NAMHH@GMAIL.COM', '984875926', 'BA VÌ, HÀ NỘI'),
       ('C003', 'TÔ NGỌC VŨ', 'VUTN@GMAIL.COM', '904725784', 'MỘC CHÂU, SƠN LA'),
       ('C004', 'PHẠM NGỌC ANH', 'ANHPN@GMAIL.COM', '984635365', 'VINH, NGHỆ AN'),
       ('C005', 'TRƯƠNG MINH CƯỜNG', 'CUONGTM@GMAIL.COM', '989735624', 'HAI BÀ TRƯNG, HÀ NỘI');

# BẢNG PRODUCTS
INSERT INTO PRODUCTS (PRODUCTS_ID, PRODUCTS_NAME, DESCRIPTION, PRICE, STATUS)
VALUES ('P001', 'IPHONE 13 PROMAX', 'BẢN 512 GB, XANH LÁ', 22999999, 1),
       ('P002', 'DELL VOSTRO V3510', 'CORE 5, RAM 8GB', 14999999, 1),
       ('P003', 'MACBOOK PRO M2', '8CPU 10GPU 8GB 256GB', 28999999, 1),
       ('P004', 'APPLE WATCH ULTRA', 'TITANIUM ALPINE LOOP SMALL', 18999999, 1),
       ('P005', 'AIRPODS 2 2022', 'SPATIAL AUDIO', 4090000, 1);

# BẢNG ORDERS
INSERT INTO ORDERS (ORDERS_ID, CUSTOMERS_ID, ORDER_DATE, TOTAL_AMOUNT)
VALUES ('H001', 'C001', '2023-02-22', 52999997),
       ('H002', 'C001', '2023-03-11', 80999997),
       ('H003', 'C002', '2023-01-22', 54359998),
       ('H004', 'C003', '2023-03-14', 102999995),
       ('H005', 'C003', '2022-03-12', 80999997),
       ('H006', 'C004', '2023-02-01', 110449994),
       ('H007', 'C004', '2023-03-29', 79999996),
       ('H008', 'C005', '2023-02-14', 29999998),
       ('H009', 'C005', '2023-01-10', 28999999),
       ('H010', 'C005', '2023-04-01', 149999994);

# BẢNG ORDERS_DETAILS
INSERT INTO ORDERS_DETAILS (ORDERS_ID, PRODUCTS_ID, PRICE, QUANTITY)
VALUES ('H001', 'P002', 14999999, 1),
       ('H001', 'P004', 18999999, 2),
       ('H002', 'P001', 22999999, 1),
       ('H002', 'P003', 28999999, 2),
       ('H003', 'P004', 18999999, 2),
       ('H003', 'P005', 4090000, 4),
       ('H004', 'P002', 14299999, 3),
       ('H004', 'P003', 28999999, 2),
       ('H005', 'P001', 22999999, 1),
       ('H005', 'P003', 28999999, 2),
       ('H006', 'P005', 4090000, 5),
       ('H006', 'P002', 14999999, 6),
       ('H007', 'P004', 18999999, 3),
       ('H007', 'P001', 22999999, 1),
       ('H008', 'P002', 14999999, 2),
       ('H009', 'P003', 28999999, 1),
       ('H010', 'P003', 28999999, 2),
       ('H010', 'P001', 22999999, 4);

#BÀI 3: TRUY VẤN DỮ LIỆU:
#1. LẤY RA TẤT CẢ THÔNG TIN GỒM: TÊN, EMAIL, SỐ ĐIỆN THOẠI VÀ ĐỊA CHỈ TRONG BẢNG CUSTOMERS.
SELECT NAME, EMAIL, PHONE, ADDRESS
FROM CUSTOMERS;

#2. THỐNG KÊ NHỮNG KHÁCH HÀNG MUA HÀNG TRONG THÁNG 3/2023 (THÔNG TIN BAO GỒM TÊN, SỐ ĐIỆN
#THOẠI VÀ ĐỊA CHỈ KHÁCH HÀNG).
SELECT C.NAME, C.PHONE, C.ADDRESS
FROM CUSTOMERS C
         JOIN ORDERS O ON C.CUSTOMERS_ID = O.CUSTOMERS_ID
WHERE O.ORDER_DATE BETWEEN '2023-03-01' AND '2023-03-31';

#3. THỐNG KÊ DOANH THUA THEO TỪNG THÁNG CỦA CỬA HÀNG TRONG NĂM 2023 (THÔNG TIN BAO GỒM
#THÁNG VÀ TỔNG DOANH THU ).
SELECT MONTH(ORDER_DATE) AS MONTH, SUM(TOTAL_AMOUNT) AS TOTAL_REVENUE
FROM ORDERS
WHERE YEAR(ORDER_DATE) = 2023
GROUP BY MONTH(ORDER_DATE);

#4. THỐNG KÊ NHỮNG NGƯỜI DÙNG KHÔNG MUA HÀNG TRONG THÁNG 2/2023 (THÔNG TIN GỒM TÊN KHÁCH
#HÀNG, ĐỊA CHỈ , EMAIL VÀ SỐ ĐIÊN THOẠI).
SELECT C.NAME, C.ADDRESS, C.EMAIL, C.PHONE
FROM CUSTOMERS C
WHERE C.CUSTOMERS_ID NOT IN (SELECT DISTINCT CUSTOMERS_ID
                             FROM ORDERS
                             WHERE MONTH(ORDER_DATE) = 2
                               AND YEAR(ORDER_DATE) = 2023);

#5. THỐNG KÊ SỐ LƯỢNG TỪNG SẢN PHẨM ĐƯỢC BÁN RA TRONG THÁNG 3/2023 (THÔNG TIN BAO GỒM MÃ
#SẢN PHẨM, TÊN SẢN PHẨM VÀ SỐ LƯỢNG BÁN RA).
SELECT OD.PRODUCTS_ID, P.PRODUCTS_NAME, SUM(OD.QUANTITY) AS TOTAL_QUANTITY
FROM ORDERS_DETAILS OD
         JOIN PRODUCTS P ON OD.PRODUCTS_ID = P.PRODUCTS_ID
         JOIN ORDERS O ON OD.ORDERS_ID = O.ORDERS_ID
WHERE MONTH(O.ORDER_DATE) = 3
  AND YEAR(O.ORDER_DATE) = 2023
GROUP BY OD.PRODUCTS_ID, P.PRODUCTS_NAME;

#6. THỐNG KÊ TỔNG CHI TIÊU CỦA TỪNG KHÁCH HÀNG TRONG NĂM 2023 SẮP XẾP GIẢM DẦN THEO MỨC CHI
#TIÊU (THÔNG TIN BAO GỒM MÃ KHÁCH HÀNG, TÊN KHÁCH HÀNG VÀ MỨC CHI TIÊU).
SELECT C.CUSTOMERS_ID, C.NAME, SUM(O.TOTAL_AMOUNT) AS TOTAL_SPENDING
FROM CUSTOMERS C
         JOIN ORDERS O ON C.CUSTOMERS_ID = O.CUSTOMERS_ID
WHERE YEAR(O.ORDER_DATE) = 2023
GROUP BY C.CUSTOMERS_ID, C.NAME
ORDER BY TOTAL_SPENDING DESC;

#7. THỐNG KÊ NHỮNG ĐƠN HÀNG MÀ TỔNG SỐ LƯỢNG SẢN PHẨM MUA TỪ 5 TRỞ LÊN (THÔNG TIN BAO GỒM
#TÊN NGƯỜI MUA, TỔNG TIỀN , NGÀY TẠO HOÁ ĐƠN, TỔNG SỐ LƯỢNG SẢN PHẨM) .
SELECT C.NAME, O.TOTAL_AMOUNT, O.ORDER_DATE, SUM(OD.QUANTITY) AS TOTAL_QUANTITY
FROM CUSTOMERS C
         JOIN ORDERS O ON C.CUSTOMERS_ID = O.CUSTOMERS_ID
         JOIN ORDERS_DETAILS OD ON O.ORDERS_ID = OD.ORDERS_ID
GROUP BY O.ORDERS_ID
HAVING TOTAL_QUANTITY >= 5;

# BÀI 4: TẠO VIEW, PROCEDURE
# 1. TẠO VIEW LẤY CÁC THÔNG TIN HOÁ ĐƠN BAO GỒM : TÊN KHÁCH HÀNG, SỐ ĐIỆN THOẠI, ĐỊA CHỈ, TỔNG
# TIỀN VÀ NGÀY TẠO HOÁ ĐƠN .
CREATE VIEW INVOICEINFO AS
SELECT C.NAME         AS CUSTOMERNAME,
       C.PHONE        AS PHONENUMBER,
       C.ADDRESS      AS ADDRESS,
       O.TOTAL_AMOUNT AS TOTALAMOUNT,
       O.ORDER_DATE   AS ORDERDATE
FROM CUSTOMERS C
         JOIN ORDERS O ON C.CUSTOMERS_ID = O.CUSTOMERS_ID;

# 2. TẠO VIEW HIỂN THỊ THÔNG TIN KHÁCH HÀNG GỒM : TÊN KHÁCH HÀNG, ĐỊA CHỈ, SỐ ĐIỆN THOẠI VÀ TỔNG
# SỐ ĐƠN ĐÃ ĐẶT.
CREATE VIEW CUSTOMERINFO AS
SELECT C.NAME AS CUSTOMERNAME, C.ADDRESS AS ADDRESS, C.PHONE AS PHONENUMBER, COUNT(O.ORDERS_ID) AS TOTALORDERS
FROM CUSTOMERS C
         LEFT JOIN ORDERS O ON C.CUSTOMERS_ID = O.CUSTOMERS_ID
GROUP BY C.NAME, C.ADDRESS, C.PHONE;

# 3. TẠO VIEW HIỂN THỊ THÔNG TIN SẢN PHẨM GỒM: TÊN SẢN PHẨM, MÔ TẢ, GIÁ VÀ TỔNG SỐ LƯỢNG ĐÃ
# BÁN RA CỦA MỖI SẢN PHẨM.
CREATE VIEW PRODUCTINFO AS
SELECT P.PRODUCTS_NAME  AS PRODUCTNAME,
       P.DESCRIPTION    AS DESCRIPTION,
       P.PRICE          AS PRICE,
       SUM(OD.QUANTITY) AS TOTALQUANTITYSOLD
FROM PRODUCTS P
         JOIN ORDERS_DETAILS OD ON P.PRODUCTS_ID = OD.PRODUCTS_ID
GROUP BY P.PRODUCTS_NAME, P.DESCRIPTION, P.PRICE;

# 4. ĐÁNH INDEX CHO TRƯỜNG `PHONE` VÀ `EMAIL` CỦA BẢNG CUSTOMER.
CREATE INDEX IDX_PHONE ON CUSTOMERS (PHONE);
CREATE INDEX IDX_EMAIL ON CUSTOMERS (EMAIL);

# 5. TẠO PROCEDURE LẤY TẤT CẢ THÔNG TIN CỦA 1 KHÁCH HÀNG DỰA TRÊN MÃ SỐ KHÁCH HÀNG.
DELIMITER //
CREATE PROCEDURE GETCUSTOMERINFOBYID(IN P_CUSTOMERID VARCHAR(4))
BEGIN
    SELECT *
    FROM CUSTOMERS
    WHERE CUSTOMERS_ID = P_CUSTOMERID;
END//
DELIMITER ;
CALL GETCUSTOMERINFOBYID('C003');

# 6. TẠO PROCEDURE LẤY THÔNG TIN CỦA TẤT CẢ SẢN PHẨM.
DELIMITER //
CREATE PROCEDURE GETALLPRODUCTS()
BEGIN
    SELECT *
    FROM PRODUCTS;
END//
DELIMITER ;
CALL GETALLPRODUCTS();

# 7. TẠO PROCEDURE HIỂN THỊ DANH SÁCH HOÁ ĐƠN DỰA TRÊN MÃ NGƯỜI DÙNG.
DELIMITER //
CREATE PROCEDURE GETINVOICESBYCUSTOMERID(IN P_CUSTOMERID VARCHAR(4))
BEGIN
    SELECT *
    FROM ORDERS
    WHERE CUSTOMERS_ID = P_CUSTOMERID;
END//
DELIMITER ;
CALL GETINVOICESBYCUSTOMERID('C002');

# 8. TẠO PROCEDURE TẠO MỚI MỘT ĐƠN HÀNG VỚI CÁC THAM SỐ LÀ MÃ KHÁCH HÀNG, TỔNG
# TIỀN VÀ NGÀY TẠO HOÁ ĐƠN, VÀ HIỂN THỊ RA MÃ HOÁ ĐƠN VỪA TẠO.
DELIMITER //
CREATE PROCEDURE CREATENEWORDER(
    IN P_CUSTOMERID VARCHAR(4),
    IN P_TOTALAMOUNT DOUBLE,
    IN P_ORDERDATE DATE,
    OUT P_NEWORDERID VARCHAR(4)
)
BEGIN
    DECLARE MAXORDERID INT;
    DECLARE NEWID INT;

    SELECT MAX(CAST(SUBSTRING(ORDERS_ID, 2) AS UNSIGNED)) INTO MAXORDERID FROM ORDERS;

    SET NEWID = IFNULL(MAXORDERID, 0) + 1;
    SET P_NEWORDERID = CONCAT('H', LPAD(NEWID, 3, '0'));

    INSERT INTO ORDERS (ORDERS_ID, CUSTOMERS_ID, TOTAL_AMOUNT, ORDER_DATE)
    VALUES (P_NEWORDERID, P_CUSTOMERID, P_TOTALAMOUNT, P_ORDERDATE);
    SELECT P_NEWORDERID AS NEWORDERID;

END//
DELIMITER ;


CALL CREATENEWORDER('C001', 14999999, '2024-03-08', @NEWORDERID);


# 9. TẠO PROCEDURE THỐNG KÊ SỐ LƯỢNG BÁN RA CỦA MỖI SẢN PHẨM TRONG KHOẢNG
# THỜI GIAN CỤ THỂ VỚI 2 THAM SỐ LÀ NGÀY BẮT ĐẦU VÀ NGÀY KẾT THÚC.
DELIMITER //
CREATE PROCEDURE SALESQUANTITYBYPERIOD(IN P_STARTDATE DATE, IN P_ENDDATE DATE)
BEGIN
    SELECT P.PRODUCTS_NAME AS PRODUCTNAME, SUM(OD.QUANTITY) AS TOTALQUANTITYSOLD
    FROM PRODUCTS P
             JOIN ORDERS_DETAILS OD ON P.PRODUCTS_ID = OD.PRODUCTS_ID
             JOIN ORDERS O ON OD.ORDERS_ID = O.ORDERS_ID
    WHERE O.ORDER_DATE BETWEEN P_STARTDATE AND P_ENDDATE
    GROUP BY P.PRODUCTS_NAME;
END//
DELIMITER ;
CALL SALESQUANTITYBYPERIOD('2023-03-10', '2023-03-15');

# 10. TẠO PROCEDURE THỐNG KÊ SỐ LƯỢNG CỦA MỖI SẢN PHẨM ĐƯỢC BÁN RA THEO THỨ TỰ
# GIẢM DẦN CỦA THÁNG ĐÓ VỚI THAM SỐ VÀO LÀ THÁNG VÀ NĂM CẦN THỐNG KÊ.
DELIMITER //
CREATE PROCEDURE SALESQUANTITYBYMONTH(IN P_MONTH INT, IN P_YEAR INT)
BEGIN
    SELECT P.PRODUCTS_NAME AS PRODUCTNAME, SUM(OD.QUANTITY) AS TOTALQUANTITYSOLD
    FROM PRODUCTS P
             JOIN ORDERS_DETAILS OD ON P.PRODUCTS_ID = OD.PRODUCTS_ID
             JOIN ORDERS O ON OD.ORDERS_ID = O.ORDERS_ID
    WHERE MONTH(O.ORDER_DATE) = P_MONTH
      AND YEAR(O.ORDER_DATE) = P_YEAR
    GROUP BY P.PRODUCTS_NAME
    ORDER BY TOTALQUANTITYSOLD DESC;
END//
DELIMITER ;
CALL SALESQUANTITYBYMONTH(3, 2023);
